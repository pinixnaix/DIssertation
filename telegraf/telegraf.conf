# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "60s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000
  hostname = "ios-xe-mgmt.cisco.com"
  omit_hostname = false


#### NETCONF INTERFACES STATS COLLECTION ####

[[inputs.exec]]
  ## Commands array
  commands = [
    "python3 /opt/monitoring/telegraf/netconf-interfaces.py"
  ]
  json_name_key = "field"
  tag_keys = [
    "name"
  ]
  timeout = "60s"
  data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


#### NETCONF CPU FREED MEMORY STATS COLLECTION ####

[[inputs.exec]]
  ## Commands array
  commands = [
    "python3 /opt/monitoring/telegraf/netconf-cpu.py"
  ]
  json_name_key = "field"
  tag_keys = [
    "name",
    "process_id",
  ]
  timeout = "60s"
  data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


#### NETCONF MEMORY POOL STATS COLLECTION ####

[[inputs.exec]]
  ## Commands array
  commands = [
    "python3 /opt/monitoring/telegraf/netconf-memory-pools.py"
  ]
  json_name_key = "field"
  tag_keys = [
    "name"
  ]
  timeout = "60s"
  data_format = "json"

# [[outputs.file]]
#     files = ["stdout"]


# # Configuration for the Prometheus client to spawn
[[outputs.prometheus_client]]
#   ## Address to listen on
    listen = "telegraf:9273"
    metric_version = 2